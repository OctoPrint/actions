name: "Create rpi-imager.json snippet"
description: "Generates an rpi-imager.json snippet based on given checksums, sizes and metadata"
inputs:
  name:
    description: "The name of the distribution"
    required: true
  description:
    description: "The description of the distribution"
    required: true
  icon:
    description: "The icon of the distribution"
    required: true
  url:
    description: "The download URL for the image zip"
    required: true
  output:
    description: "The path to the rpi-imager.json file"
    required: true
  image_sha256:
    description: "The sha256 checksum of the image"
    required: true
  image_size:
    description: "The size of the image"
    required: true
  zip_sha256:
    description: "The sha256 checksum of the zip"
    required: true
  zip_size:
    description: "The size of the zip"
    required: true
  init_format:
    description: "The init format of the image, defaults to systemd"
runs:
  using: "composite"
  steps:
    - name: "ðŸ†• Create rpi-imager.json snippet"
      run: |
        IMAGE_SHA256="${{ inputs.image_sha256 }}"
        IMAGE_SIZE=${{ inputs.image_size }}
        ZIP_SHA256="${{ inputs.zip_sha256 }}"
        ZIP_SIZE=${{ inputs.zip_size }}
        OUTPUT="${{ inputs.output }}"

        NAME="${{ inputs.name }}"
        DESCRIPTIONS="${{ inputs.description }}"
        ICON="${{ inputs.icon }}"
        URL="${{ inputs.url }}"
        DATE=`date '+%Y-%m-%d'`

        INIT_FORMAT="${{ inputs.init_format }}"
        if [ -z "$INIT_FORMAT" ]; then
          INIT_FORMAT="systemd"
        fi

        cat > "$OUTPUT" <<EOF
        {
          "name": "$NAME",
          "description": "$DESCRIPTION",
          "url": "$URL",
          "icon": "$ICON",
          "release_date": "$DATE",
          "extract_size": $IMAGE_SIZE,
          "extract_sha256": "$IMAGE_SHA256",
          "image_download_size": $ZIP_SIZE,
          "image_download_sha256": "$ZIP_SHA256",
          "init_format": "$INIT_FORMAT"
        }
        EOF
      shell: bash
