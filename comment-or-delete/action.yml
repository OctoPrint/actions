name: "Comment or delete"
description: "Adds a comment to an issue or deletes it based on a provided condition"
inputs:
  issue_number:
    description: "The issue's number"
    required: true
  marker:
    description: "The comment marker"
    default: ""
    required: true
  body:
    description: "The comment body"
    required: true
  condition:
    description: "The condition to evaluate"
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v2
      with:
        env:
          MARKER: "${{ inputs.marker }}"
          BODY: "${{ inputs.body }}"
          CONDITION: "${{ inputs.condition }}"
          ISSUE_NUMBER: "${{ inputs.issue_number }}"
        script: |
          const { MARKER, BODY, CONDITION, ISSUE_NUMBER } = process.env;

          console.log("Issue number", ISSUE_NUMBER);

          github.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ISSUE_NUMBER,
          }).then(function(comments) {
            const comment = comments.data.find(c => c.user.login === "github-actions" && c.body.includes(MARKER));
            console.log("Comment", comment);

            if (CONDITION === "true") {
              // condition is true, we need to add or update a comment

              if (comment) {
                // update
                github.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id,
                  body: BODY
                });
              } else {
                // add
                github.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: ISSUE_NUMBER,
                  body: BODY
                });
              }

            } else if (comment) {
              // condition evaluates false but there's a comment, we need to delete the comment

              github.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id
              });
            }
          });
